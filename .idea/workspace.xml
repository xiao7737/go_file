<?xml version="1.0" encoding="UTF-8"?>
<project version="4">
  <component name="ChangeListManager">
    <list default="true" id="f2589c5d-3b2d-477d-b721-7fede3593657" name="Default" comment="slice值传递，go只有值传递">
      <change beforePath="$PROJECT_DIR$/.idea/workspace.xml" beforeDir="false" afterPath="$PROJECT_DIR$/.idea/workspace.xml" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/src/common_learn/Slice.go" beforeDir="false" afterPath="$PROJECT_DIR$/src/common_learn/Slice.go" afterDir="false" />
    </list>
    <option name="EXCLUDED_CONVERTED_TO_IGNORED" value="true" />
    <option name="SHOW_DIALOG" value="false" />
    <option name="HIGHLIGHT_CONFLICTS" value="true" />
    <option name="HIGHLIGHT_NON_ACTIVE_CHANGELIST" value="false" />
    <option name="LAST_RESOLUTION" value="IGNORE" />
  </component>
  <component name="FileTemplateManagerImpl">
    <option name="RECENT_TEMPLATES">
      <list>
        <option value="Go File" />
      </list>
    </option>
  </component>
  <component name="GOROOT" path="/usr/local/Cellar/go/1.13/libexec" />
  <component name="Git.Settings">
    <option name="RECENT_GIT_ROOT_PATH" value="$PROJECT_DIR$" />
    <option name="ROOT_SYNC" value="DONT_SYNC" />
  </component>
  <component name="GithubDefaultAccount">
    <option name="defaultAccountId" value="6587ef8c-5919-4ede-b083-afe2f7a521e5" />
  </component>
  <component name="GoLibraries">
    <option name="indexEntireGoPath" value="false" />
  </component>
  <component name="ProjectId" id="1RBefWaHpUtJBN9I4FYOwL6y9JY" />
  <component name="ProjectLevelVcsManager">
    <ConfirmationsSetting value="2" id="Add" />
  </component>
  <component name="PropertiesComponent">
    <property name="ASKED_ADD_EXTERNAL_FILES" value="true" />
    <property name="DefaultGoTemplateProperty" value="Go File" />
    <property name="GO_FMT" value="false" />
    <property name="WebServerToolWindowFactoryState" value="false" />
    <property name="go.gopath.indexing.explicitly.defined" value="true" />
    <property name="go.import.settings.migrated" value="true" />
    <property name="go.sdk.automatically.set" value="true" />
    <property name="last_opened_file_path" value="$PROJECT_DIR$" />
    <property name="nodejs_interpreter_path.stuck_in_default_project" value="undefined stuck path" />
    <property name="nodejs_npm_path_reset_for_default_project" value="true" />
    <property name="settings.editor.selected.configurable" value="watcher.settings" />
  </component>
  <component name="RecentsManager">
    <key name="MoveFile.RECENT_KEYS">
      <recent name="$PROJECT_DIR$/src/design_pattern" />
    </key>
  </component>
  <component name="RunDashboard">
    <option name="ruleStates">
      <list>
        <RuleState>
          <option name="name" value="ConfigurationTypeDashboardGroupingRule" />
        </RuleState>
        <RuleState>
          <option name="name" value="StatusDashboardGroupingRule" />
        </RuleState>
      </list>
    </option>
  </component>
  <component name="RunManager" selected="Go Build.go build go_file/src/common_learn (2)">
    <configuration name="go build go_file/src/common_learn (1)" type="GoApplicationRunConfiguration" factoryName="Go Application" temporary="true" nameIsGenerated="true">
      <module name="go_file" />
      <working_directory value="$PROJECT_DIR$/" />
      <kind value="FILE" />
      <filePath value="$PROJECT_DIR$/src/common_learn/Struct.go" />
      <package value="go_file/src/common_learn" />
      <directory value="$PROJECT_DIR$/" />
      <method v="2" />
    </configuration>
    <configuration name="go build go_file/src/common_learn (2)" type="GoApplicationRunConfiguration" factoryName="Go Application" temporary="true" nameIsGenerated="true">
      <module name="go_file" />
      <working_directory value="$PROJECT_DIR$/" />
      <kind value="FILE" />
      <filePath value="$PROJECT_DIR$/src/common_learn/Slice.go" />
      <package value="go_file/src/common_learn" />
      <directory value="$PROJECT_DIR$/" />
      <method v="2" />
    </configuration>
    <configuration name="go build go_file/src/common_learn (5)" type="GoApplicationRunConfiguration" factoryName="Go Application" temporary="true" nameIsGenerated="true">
      <module name="go_file" />
      <working_directory value="$PROJECT_DIR$/" />
      <kind value="FILE" />
      <filePath value="$PROJECT_DIR$/src/common_learn/test.go" />
      <package value="go_file/src/common_learn" />
      <directory value="$PROJECT_DIR$/" />
      <method v="2" />
    </configuration>
    <configuration name="go build go_file/src/common_learn" type="GoApplicationRunConfiguration" factoryName="Go Application" temporary="true" nameIsGenerated="true">
      <module name="go_file" />
      <working_directory value="$PROJECT_DIR$/" />
      <kind value="FILE" />
      <filePath value="$PROJECT_DIR$/src/common_learn/Defer.go" />
      <package value="go_file/src/common_learn" />
      <directory value="$PROJECT_DIR$/" />
      <method v="2" />
    </configuration>
    <configuration name="BenchmarkIsPalindrome in go_file/src/common_learn/huiwen" type="GoTestRunConfiguration" factoryName="Go Test" temporary="true" nameIsGenerated="true">
      <module name="go_file" />
      <working_directory value="$PROJECT_DIR$/src/common_learn/huiwen" />
      <framework value="gobench" />
      <kind value="PACKAGE" />
      <package value="go_file/src/common_learn/huiwen" />
      <directory value="$PROJECT_DIR$/" />
      <filePath value="$PROJECT_DIR$/" />
      <pattern value="^BenchmarkIsPalindrome$" />
      <method v="2" />
    </configuration>
    <list>
      <item itemvalue="Go Build.go build go_file/src/common_learn (5)" />
      <item itemvalue="Go Build.go build go_file/src/common_learn" />
      <item itemvalue="Go Test.BenchmarkIsPalindrome in go_file/src/common_learn/huiwen" />
      <item itemvalue="Go Build.go build go_file/src/common_learn (1)" />
      <item itemvalue="Go Build.go build go_file/src/common_learn (2)" />
    </list>
    <recent_temporary>
      <list>
        <item itemvalue="Go Build.go build go_file/src/common_learn (2)" />
        <item itemvalue="Go Build.go build go_file/src/common_learn (5)" />
        <item itemvalue="Go Build.go build go_file/src/common_learn (1)" />
        <item itemvalue="Go Build.go build go_file/src/common_learn" />
        <item itemvalue="Go Test.BenchmarkIsPalindrome in go_file/src/common_learn/huiwen" />
      </list>
    </recent_temporary>
  </component>
  <component name="TypeScriptGeneratedFilesManager">
    <option name="version" value="1" />
  </component>
  <component name="Vcs.Log.Tabs.Properties">
    <option name="TAB_STATES">
      <map>
        <entry key="MAIN">
          <value>
            <State>
              <option name="COLUMN_ORDER" />
            </State>
          </value>
        </entry>
      </map>
    </option>
  </component>
  <component name="VcsManagerConfiguration">
    <option name="ADD_EXTERNAL_FILES_SILENTLY" value="true" />
    <MESSAGE value="first commit" />
    <MESSAGE value=" commit" />
    <MESSAGE value="commit test" />
    <MESSAGE value="second commit" />
    <MESSAGE value="add file folder" />
    <MESSAGE value="learn go" />
    <MESSAGE value="error struct" />
    <MESSAGE value="go learn" />
    <MESSAGE value="go的并发锁机制，单例模式" />
    <MESSAGE value="返回斐波那契数列的n个数" />
    <MESSAGE value="结构体可以比较吗？" />
    <MESSAGE value="commit" />
    <MESSAGE value="map is not to be compare" />
    <MESSAGE value="goroutine 的数量" />
    <MESSAGE value="函数测试和性能测试" />
    <MESSAGE value="go单例模式" />
    <MESSAGE value="defer和panic顺序" />
    <MESSAGE value="defer和函数返回值的作用域" />
    <MESSAGE value="slice的...语法糖；闭包的记忆功能" />
    <MESSAGE value="slice值传递，go只有值传递" />
    <option name="LAST_COMMIT_MESSAGE" value="slice值传递，go只有值传递" />
  </component>
</project>